package easywebflow.sample.model;
// Generated 2012-01-13 09:00:41 by Hibernate Tools 3.4.0.CR1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.NamedQuery;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Category generated by hbm2java
 * Modifief: EAGER for products
 */
@Entity
@Table(name="CATEGORIES"
    ,catalog="INZ_SKLEP"
)
@NamedQuery(name=Category.FIND_ALL, query="select c from Category c")
public class Category  implements java.io.Serializable {
	
	public static final String FIND_ALL = "Category.findAll";    
	
     private Integer idCategory;
     private String name;
     private Set<CategoryFeature> categoryFeatures = new HashSet<CategoryFeature>(0);
     private Set<Product> products = new HashSet<Product>(0);

    public Category() {
    }

	
    public Category(String name) {
        this.name = name;
    }
    public Category(String name, Set<CategoryFeature> categoryFeatures, Set<Product> products) {
       this.name = name;
       this.categoryFeatures = categoryFeatures;
       this.products = products;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idCategory", unique=true, nullable=false)
    public Integer getIdCategory() {
        return this.idCategory;
    }
    
    public void setIdCategory(Integer idCategory) {
        this.idCategory = idCategory;
    }

    
    @Column(name="name", nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="category")
    public Set<CategoryFeature> getCategoryFeatures() {
        return this.categoryFeatures;
    }
    
    public void setCategoryFeatures(Set<CategoryFeature> categoryFeatures) {
        this.categoryFeatures = categoryFeatures;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="category")
    public Set<Product> getProducts() {
        return this.products;
    }
    
    public void setProducts(Set<Product> products) {
        this.products = products;
    }




}


